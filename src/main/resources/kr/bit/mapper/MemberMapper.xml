<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="kr.bit.mapper.MemberMapper">

    <resultMap id="memberMap" type="kr.bit.entity.Member">
        <id property="memberIdx" column="memberIdx"/>
        <result property="memberID" column="memberID"/>
        <result property="memberPw" column="memberPw"/>
        <result property="memberName" column="memberName"/>
        <result property="memberAge" column="memberAge"/>
        <result property="memberGender" column="memberGender"/>
        <result property="memberEmail" column="memberEmail"/>
        <result property="memberProfile" column="memberProfile"/>
        <collection property="authList" resultMap="authMap"/>

    </resultMap>

    <resultMap id="authMap" type="kr.bit.entity.MemberAuth">
        <id property="no" column="no"/>
        <result property="memberID" column="memberID"/>
        <result property="auth" column="auth"/>
    </resultMap>


<!--중복확인-->
    <select id="memberDoubleCheck" resultType="kr.bit.entity.Member">
        select *from mem_table where memberID=#{memberID}
    </select>


<!-- auto 없애서 (select IFNULL(MAX(memberIdx)+1,1) from mem_table) 이거 사용-->
<!--   (select IFNULL(MAX(memberIdx)+1,1) from mem_table mem) 별칭을 안주면 중복테이블이라서 에러남 -->
    <insert id="register" parameterType="kr.bit.entity.Member">
        insert into mem_table(memberIdx, memberID, memberPw,memberName, memberAge, memberGender,
        memberEmail ,memberProfile)
        values((select IFNULL(MAX(memberIdx)+1,1) from mem_table mem)
               ,#{memberID}, #{memberPw}, #{memberName}, #{memberAge}, #{memberGender},
               #{memberEmail}, #{memberProfile})
    </insert>

<!--    <select id="login" resultType="kr.bit.entity.Member" parameterType="kr.bit.entity.Member">-->
<!--        select * from mem_table where memberID=#{memberID}-->
<!--    </select>-->
<!--    권한등급을 보여주기 위해 조인-->
<!--    <select id="login" resultMap="memberMap" parameterType="kr.bit.entity.Member">-->
<!--        SELECT m.*, ma.auth-->
<!--        FROM mem_table m-->
<!--        LEFT JOIN member_auth ma ON m.memberID = ma.memberID-->
<!--        WHERE m.memberID = #{memberID}-->
<!--    </select>-->

    <select id="login" resultMap="memberMap">
        SELECT *
        FROM mem_table mem
        LEFT outer join  member_auth auth
        on mem.memberID = auth.memberID
        WHERE mem.memberID = #{memberID}
    </select>


    <update id="update" parameterType="kr.bit.entity.Member">
        update mem_table set memberPw = #{memberPw}, memberName = #{memberName},
        memberAge = #{memberAge},memberGender = #{memberGender}, memberEmail=#{memberEmail}
        where memberID = #{memberID}
    </update>

<!--    프로필 업데이트-->
    <select id="getMember" resultMap="memberMap">
        select *from mem_table mem
        left outer join member_auth auth
        on
        mem.memberID=auth.memberID
        where mem.memberID=#{memberID}
    </select>

    <update id="memberProfile" parameterType="kr.bit.entity.Member">
        update mem_table set memberProfile = #{memberProfile} where memberID = #{memberID}
    </update>

<!--    권한테이블 추가-->
    <insert id="authRegister" parameterType="kr.bit.entity.MemberAuth">
        INSERT INTO member_auth(memberID, auth) values(#{memberID}, #{auth})
    </insert>

<!-- 회원수정시 권한줬던거 삭제하기위한 쿼리-->
    <delete id="authDalate">
        delete from member_Auth where memberID = #{memberID}
    </delete>
</mapper>

